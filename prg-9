import pandas as pd
from sklearn.preprocessing import MinMaxScaler, StandardScaler
# Create Sample Dataset
df = pd.DataFrame({
 "Age": [25, 30, 35, 40, 45, 50, 55, 60, 65, 70],
 "Salary": [30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000, 110000, 120000],
 "Experience": [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]
})
# Feature Engineering
df["Salary_per_Experience"] = df["Salary"] / df["Experience"]
df["Age_Group"] = pd.cut(df["Age"], bins=[20, 40, 60, 80], labels=["Young", "Middle-aged",
"Senior"])
# Scaling (Standardization & Min-Max Normalization)
scalers = {"Standardized": StandardScaler(), "MinMax": MinMaxScaler()}
scaled_dfs = {name: df.copy() for name in scalers}
for name, scaler in scalers.items():
 scaled_dfs[name][["Age", "Salary", "Experience", "Salary_per_Experience"]] =
scaler.fit_transform(
 df[["Age", "Salary", "Experience", "Salary_per_Experience"]])
# Display Results
print("\nOriginal Dataset:\n", df)
print("\nDataset after Standardization:\n", scaled_dfs["Standardized"])
print("\nDataset after Min-Max Normalization:\n", scaled_dfs["MinMax"])
